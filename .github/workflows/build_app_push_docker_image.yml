on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and package JAR
        run: mvn -B package --file pom.xml
        env:
          CI: false

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-app
          path: target/user.jar

  push_to_registry:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download JAR artifact
        uses: actions/download-artifact@v2
        with:
          name: my-app
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: wimvanderpluijm/y-sem6:user
          build-args: JAR_FILE=./user.jar

  ### deploy en release komen later in de development fase
  # deploy:
  #   runs-on: ubuntu-latest
  #   # When application is successfully tested and build has been generated
  #   # Then we can start with deployment
  #   needs: build
  #   steps:
  #     # Download previously shared build
  #     - name: Get artifact
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: react-github-actions-build
  #     # Set the credentials from repository settings/secrets
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
  #     # Copy the files from build folder to the S3 bucket
  #     - name: Deploy to S3
  #       run: aws s3 sync . s3://react-github-actions --acl public-read
  #       working-directory: react-github-actions-build
  # release:
  #   runs-on: ubuntu-latest
  #   # We specify that deploys needs to
  #   # finish before we create a release
  #   needs: deploy
  #   steps:
  #     # Download previously shared build
  #     - name: Get artifact
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: react-github-actions-build
  #     # Zip the build using external action
  #     - name: Zip build
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         filename: react-github-actions-release-build.zip
  #         path: react-github-actions-build
  #     # Upload as an artifact of the current workflow
  #     - name: Upload build zip artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: react-github-actions-release-build.zip
  #         path: react-github-actions-release-build.zip
  #     # Make official GitHub release which will trigger
  #     # sending the mail with link for access
  #     - name: Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: react-github-actions-release-build.zip
  #         body: https://react-github-actions.s3.amazonaws.com/index.html
  #         token: ${{ secrets.GITHUB_TOKEN }}